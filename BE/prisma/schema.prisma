// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
  MODERATOR
}

enum AuthProvider {
  LOCAL
  GOOGLE
  GITHUB
  LINKEDIN
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  username  String?  @unique
  firstName String?
  lastName  String?
  password  String?
  avatar    String?
  role      Role     @default(USER)
  provider  AuthProvider @default(LOCAL)
  providerId String?
  
  isActive     Boolean @default(true)
  isVerified   Boolean @default(false)
  verificationToken String?
  resetPasswordToken String?
  resetPasswordExpires DateTime?
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  refreshTokens RefreshToken[]
  sessions      Session[]
  oauthProviders OAuthProvider[]
  
  @@map("users")
}

model RefreshToken {
  id        String   @id @default(cuid())
  token     String   @unique
  tokenHash String   @unique
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  sessionId String?
  session   Session? @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  expiresAt DateTime
  isUsed    Boolean  @default(false)
  createdAt DateTime @default(now())
  
  @@map("refresh_tokens")
}

model Session {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  ipAddress String?
  userAgent String?
  deviceId  String?
  lastUsedAt DateTime @default(now())
  expiresAt DateTime
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  
  refreshTokens RefreshToken[]
  
  @@map("sessions")
}

model OAuthProvider {
  id         String   @id @default(cuid())
  userId     String
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  provider   AuthProvider
  providerId String
  email      String?
  username   String?
  avatar     String?
  accessToken String?
  refreshToken String?
  expiresAt   DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@unique([provider, providerId])
  @@map("oauth_providers")
}
